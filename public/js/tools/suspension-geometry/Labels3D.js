!function(e){var t={};function i(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/",i(i.s=54)}({54:function(e,t,i){e.exports=i(55)},55:function(e,t){var i=function(){function e(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,i,r){return i&&e(t.prototype,i),r&&e(t,r),t}}();!function(){function e(t,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.lineMeshes=[],this.textMeshes=[],this.floorY=t,this.frame=i,this.rearTire=i.rearTire,this.frontTire=i.frontTire,this.textParameters={font:this.frame.font,size:50,height:1,curveSegments:2,bevelEnabled:!1},this.blueMaterial=new THREE.LineBasicMaterial({color:255}),this.redMaterial=new THREE.LineBasicMaterial({color:16711680}),this.greenMaterial=new THREE.LineBasicMaterial({color:65280})}i(e,[{key:"calculateAngleFrom3Sides",value:function(e,t,i){var r=Math.pow(e,2)+Math.pow(t,2)-Math.pow(i,2),n=2*t*e;return Math.abs(Math.acos(r/n))}},{key:"convertMMtoIN",value:function(e){return e/25.4}},{key:"convertRADtoDEG",value:function(e){return THREE.MathUtils.radToDeg(e)}},{key:"calculateLabelValues",value:function(){this.wheelbaseMM=this.frontTire.x-this.rearTire.x,this.trailMM=this.frame.trailMM;var e=new THREE.Vector3(this.frame.frameStemTopPoint.x,this.floorY+1,0),t=this.frame.frameStemTopPoint,i=this.frame.trailPoint,r=e.distanceTo(t),n=t.distanceTo(i),o=e.distanceTo(i);return this.rakeRAD=this.calculateAngleFrom3Sides(r,n,o),this}},{key:"calculatePoints",value:function(){return this.wheelbasePoints=[new THREE.Vector3(this.rearTire.x,this.floorY+1,0),new THREE.Vector3(this.rearTire.x,this.floorY+1,200),new THREE.Vector3(this.frontTire.x,this.floorY+1,200),new THREE.Vector3(this.frontTire.x,this.floorY+1,0)],this.trailPoints=[new THREE.Vector3(this.frontTire.x,this.floorY+1,200),new THREE.Vector3(this.frontTire.x,this.floorY+1,250),new THREE.Vector3(this.frame.trailPoint.x,this.floorY+1,250),new THREE.Vector3(this.frame.trailPoint.x,this.floorY+1,0)],this.rakePoints=[new THREE.Vector3(this.frame.frameStemTopPoint.x,this.floorY+1,0),this.frame.frameStemTopPoint,this.frame.trailPoint],this}},{key:"buildLine",value:function(e,t){var i=new THREE.Line((new THREE.BufferGeometry).setFromPoints(e),t);return this.lineMeshes.push(i),i}},{key:"buildLabel",value:function(e,t){var i=new THREE.TextGeometry(e,this.textParameters);i.computeBoundingBox(),i.computeVertexNormals(),i.textWidth=i.boundingBox.max.x-i.boundingBox.min.x,i.textHeight=i.boundingBox.max.y-i.boundingBox.min.y;var r=new THREE.Mesh(i,t);return this.textMeshes.push(r),r}},{key:"buildDistanceLabel",value:function(e,t,i){var r=e+": "+t.toFixed(0)+"mm ("+this.convertMMtoIN(t).toFixed(2)+'")';return this.buildLabel(r,i)}},{key:"buildAngleLabel",value:function(e,t,i){var r=e+": "+t.toFixed(1)+"Â°";return this.buildLabel(r,i)}},{key:"buildLabels",value:function(){this.buildLine(this.wheelbasePoints,this.blueMaterial);var e=this.buildDistanceLabel("WHEELBASE",this.wheelbaseMM,this.blueMaterial);e.position.set(this.rearTire.x+this.wheelbaseMM/2-e.geometry.textWidth/2,this.floorY,260),e.rotateX(-Math.PI/2),this.buildLine(this.trailPoints,this.redMaterial);var t=this.buildDistanceLabel("TRAIL",this.trailMM,this.redMaterial);t.rotateX(-Math.PI/2),t.rotateZ(-Math.PI/2),t.position.set(this.frontTire.x+(this.frame.trailPoint.x-this.frontTire.x)/2-t.geometry.textHeight/2,this.floorY,260),this.buildLine(this.rakePoints,this.greenMaterial);var i=this.buildAngleLabel("RAKE",this.convertRADtoDEG(this.rakeRAD),this.greenMaterial);return i.rotateZ(-Math.PI/2),i.position.set(this.frame.frameStemTopPoint.x+i.geometry.textHeight/2,0,0),this}},{key:"removeFromObject",value:function(e){this.lineMeshes.forEach(function(t){return e.remove(t)}),this.lineMeshes=[],this.textMeshes.forEach(function(t){return e.remove(t)}),this.textMeshes=[]}},{key:"addToObject",value:function(e){this.lineMeshes.forEach(function(t){return e.add(t)}),this.textMeshes.forEach(function(t){return e.add(t)})}}])}()}});